@using System.Security.Claims;
@model QLcaulacbosinhvien.ViewModels.EventViewModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
 
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
    <!-- Content Header (Page header) -->
    <!DOCTYPE html>
<html lang="en">
	<head>

	</head>
    <body>
<div class="content-wrapper">
    
    <!-- Default box -->
    <div class="card">
        <div class="card-body">
            <form method="post" asp-action ="Edit" asp-controller ="Events">
                <div asp-validation-summary="All"></div> 
                <input type="hidden" asp-for="EventID"  />
						<div class="form-group col md-6">
							<label asp-for="EventName">Tên sự kiện</label>
							<input type="text" class="form-control mb-3" asp-for="EventName" placeholder="Nhập Tên sự kiện" />
							<span asp-validation-for="EventName" class="alert-danger"></span>

						</div>
						<div class="form-group col md-6">
							<label asp-for="EventDescription">Mô tả</label>
							<input type="text" class="form-control mb-3" asp-for="EventDescription" placeholder="mô tả sự kiện" />
							<span asp-validation-for="EventDescription" class="alert-danger"></span>
						</div>
                        <div class="mb-3">
                        <label asp-for="Images" class="form-label">Ảnh</label>
                        <input class="form-control" type="file" asp-for="Images" id="formFileMultiple" multiple="">
                        	<span asp-validation-for="Images" class="alert-danger"></span>
                      </div>
                           <div class="form-group col-md-6">
                             <label asp-for="AccountID">Người quản lí</label>
                                  <select asp-for="AccountID" asp-items="ViewBag.AccountList" class="form-control"></select>
                                <span asp-validation-for="AccountID" class="alert-danger"></span>
                        </div>

						<div class="form-group col md-6">
							<label asp-for="EventDate">Ngày bắt đầu</label>
							<input type="datetime-local" class="form-control mb-3" asp-for="EventDate" placeholder="mô tả sự kiện" />
							<span asp-validation-for="EventDate" class="alert-danger"></span>
						</div>
						
						<div class="form-group col md-6">
							<label asp-for="EndEvent">Ngày kết thúc</label>
							<input type="datetime-local" class="form-control mb-3" asp-for="EndEvent" placeholder="mô tả sự kiện" />
							<span asp-validation-for="EndEvent" class="alert-danger"></span>
						</div>

						<div class="form-group col md-6">
							<label asp-for="EventLocation">Địa điểm</label>
							<input type="text" class="form-control mb-3" asp-for="EventLocation" placeholder="mô tả sự kiện" />
							<span asp-validation-for="EventLocation" class="alert-danger"></span>
						</div>
						<div class="form-group col md-6">
							<label asp-for="Point">Điểm</label>
							<input type="text" class="form-control mb-3" asp-for="Point" placeholder="mô tả sự kiện" />
							<span asp-validation-for="Point" class="alert-danger"></span>
						</div>
                         <div class="form-group col md-6">
							<label asp-for="MemberJoin">Số lượng người</label>
							<input type="text" class="form-control mb-3" asp-for="MemberJoin" placeholder="Nhập số lượng người" />
							<span asp-validation-for="MemberJoin" class="alert-danger"></span>
						</div>




				<div class="form-group col-md-6 mt-3 mb-3">
					<label>
						@Html.CheckBox("Status", false)
						Hiển thị
					</label>
				</div>

                <button type="submit" class="btn btn-lg btn-primary p-2"><i class="bi bi-file-plus-fill"></i> Lưu</button>
                <a asp-controller="Events" asp-action="Read" class="btn btn-lg btn-warning p-2">Quay lại</a>
            </form>
        </div>
    </div>
    <!-- /.card -->
</div>
<!-- /.content -->
</div>
<script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script>

<script>
    class MyUploadAdapter {
        constructor( loader ) {
            this.loader = loader;
            const uploadUrl = '/Admin/Events/UploadImage'; // Đảm bảo rằng đường dẫn này đúng

        }

        // Bắt đầu quá trình tải lên
        upload() {
            return this.loader.file
                .then( file => new Promise( ( resolve, reject ) => {
                    this._initRequest();
                    this._initListeners( resolve, reject, file );
                    this._sendRequest( file );
                } ) );
        }

        abort() {
            if ( this.xhr ) {
                this.xhr.abort();
            }
        }

        _initRequest() {
            const xhr = this.xhr = new XMLHttpRequest();
            const uploadUrl = '/Admin/Events/UploadImage'; 
            
            xhr.open( 'POST', uploadUrl, true );
            xhr.responseType = 'json';
        }

        _initListeners( resolve, reject, file ) {
            const xhr = this.xhr;
            const loader = this.loader;
            const genericErrorText = `Không thể tải tệp: ${ file.name }.`

            xhr.addEventListener( 'error', () => reject( genericErrorText ) );
            xhr.addEventListener( 'abort', () => reject() );
            xhr.addEventListener( 'load', () => {
                const response = xhr.response;

                if ( !response || response.error ) {
                    return reject( response && response.error ? response.error.message : genericErrorText );
                }

                resolve({
                    default: response.url
                });
            });

            if ( xhr.upload ) {
                xhr.upload.addEventListener( 'progress', evt => {
                    if ( evt.lengthComputable ) {
                        loader.uploadTotal = evt.total;
                        loader.uploaded = evt.loaded;
                    }
                });
            }
        }

        _sendRequest( file ) {
            const data = new FormData();
            data.append( 'upload', file );
            this.xhr.send( data );
        }
    }

    function MyCustomUploadAdapterPlugin( editor ) {
        editor.plugins.get( 'FileRepository' ).createUploadAdapter = ( loader ) => {
            return new MyUploadAdapter( loader );
        };
    }

    ClassicEditor
        .create( document.querySelector( '#editor' ), {
            extraPlugins: [ MyCustomUploadAdapterPlugin ]
        })
        .then( editor => {
            window.editor = editor;
        })
        .catch( error => {
            console.error( error );
        });
</script>

    </body>
</html>
